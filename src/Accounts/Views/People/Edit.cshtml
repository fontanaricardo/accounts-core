@model Accounts.Models.PersonViewModel

@{
    ViewBag.Title = "Editar meus dados";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <p class="help-block">
                    Ao clicar no botão "Salvar", sua certificação eletrônica será revogada.<br />
                    Para obter uma nova certificação, será necessário efetuar o processo novamente.
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.CPF)
                @Html.DisplayFor(model => model.CPF )
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(model => model.Dispatcher, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Dispatcher, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Dispatcher, "", new { @class = "text-danger" })
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Password, "Password")
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
				<a href="/Manage/Index" class="btn btn-default">Voltar</a>
				<input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}